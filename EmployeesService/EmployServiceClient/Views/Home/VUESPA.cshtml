@section Style
    {
    <style>
        thead {
            background-color:gray;
            
        }

        #SS{
            background-color:aquamarine;
        }

        #AA{

        }

        #LAB{
            font-size:30px;
            font-weight:bolder;
           
            
        }
    </style>
}


<div id="app" class="container">

    @*篩選員工紀錄*@
    <div class="row" style="width:50%;margin-left:auto;margin-right:10px;">
        <label id="LAB"class="col-lg-3 form-label">篩選</label>
        <input type="text" id="SS"class="col-lg-7 form-control m-1" v-model="filter" placeholder="請輸入篩選關鍵字" />
        <button id="AA"class="btn btn-outline-dark m-1" @@click="filterEmployees">篩選</button>
    </div>


    <div class="form-group">
        <button type="button" @@click="showModel" class="btn btn-primary mb-1">新增紀錄</button>
        </div>

        @*table*@
    <div class="form-group">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <td>EmployeeId</td>
                    <td>FirstName</td>
                    <td>LastName</td>
                    <td>Title</td>
                    <td>編輯</td>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in employeeDTOes">
                    <template v-if="item.Edit == true">
                        <td>{{item.employeeId}}</td>
                        <td><input v-model="item.firstName" /></td>
                        <td><input v-model="item.lastName" /></td>
                        <input v-model="item.title" />
                        <td>
                            <button class="btn btn-warning" @@click="update(item)">修改</button>
                            <button class="btn btn-info" @@click="cancel">取消</button>

                        </td>
                    </template>
                    <template v-else>
                        <td>{{item.employeeId}}</td>
                        <td>{{item.firstName}}</td>
                        <td>{{item.lastName}}</td>
                        <td>{{item.title}}</td>
                        <td>
                            <button class="btn btn-success" @@click="edit(item.employeeId)">編輯</button>
                            <button class="btn btn-danger" @@click="deleteEmployee(item.employeeId)">刪除</button>

                        </td>
                    </template>
                </tr>
            </tbody>
        </table>
    </div>

    @*新增員工紀錄*@
    <div class="modal fade" id="insertModel" tabindex="-1" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitleId">新增員工紀錄</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <lable class="form-lable">FirstName</lable>
                        <input type="text" class="form-control" v-model="firstName" />
                    </div>
                    <div class="form-group">
                        <lable class="form-lable">LastName</lable>
                        <input type="text" class="form-control" v-model="lastName" />
                    </div>
                    <div class="form-group">
                        <lable class="form-lable">Title</lable>
                        <input type="text" class="form-control" v-model="title" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                    <button type="button" class="btn btn-primary" @@click="insert">新增員工</button>
                </div>
            </div>
        </div>
    </div>

</div>


@section Scripts
    {

    @*<script src="https://unpkg.com/vue@next"></script>*@
    <script src="https://unpkg.com/vue@3.2.36"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.3.4/axios.min.js"></script>

    <script>
        var webApiBaseAddr = "https://localhost:7131";
        var vueApp = {
            data() {
                return {
                    employeeDTOes:[],
                    filter:"",
                    employeeId:null,
                    firstName:null,
                    lastName:null,
                    title:null,
                    firstNameOld:null,
                    lastNameOld: null,
                    titleOld: null,
                };
            },
            mounted:function() {
                let _this=this;
                _this.getEmployeeDTOes();
            },
            methods: {
                getEmployeeDTOes:function(){
                    let _this = this;
                    axios.get(`${webApiBaseAddr}/api/Employees`).then(response=>{
                        //alert(JSON.stringify(response.data));
                        _this.employeeDTOes = response.data;
                        var employeeList=[];
                        for(var i = 0; i < _this.employeeDTOes.length; i++){
                            var item = _this.employeeDTOes[i];
                            item.Edit = false;
                            employeeList.push(item);
                        }
                        _this.employeeDTOes = employeeList;
                    });
                },
                filterEmployees:function(){
                    //alert("filter");
                    let _this = this;
                    var p = {
                        FirstName: _this.filter,
                        LastName: _this.filter,
                        Title: _this.filter,
                    };
                    axios.post(`${webApiBaseAddr}/api/Employees/Filter`,p).then(response => {
                        //alert(JSON.stringify(response.data));
                        _this.employeeDTOes = response.data;
                        var employeeList = [];
                        for (var i = 0; i < _this.employeeDTOes.length; i++) {
                            var item = _this.employeeDTOes[i];
                            item.Edit = false;
                            employeeList.push(item);
                        }
                        _this.employeeDTOes = employeeList;
                    });
                },
                edit: function (employeeId) {
                    //alert("edit");
                    let _this = this;
                    var employeeList=[];
                    for (var i=0; i < _this.employeeDTOes.length;i++){
                        var item = _this.employeeDTOes[i];
                        if(item.employeeId == employeeId){
                            item.Edit = true;
                            _this.firstNameOld = item.firstName;
                            _this.lastNameOld = item.lastName;
                            _this.titleOld = item.title;
                        }
                        else{
                            item.Edit=false;
                        }
                        employeeList.push(item);
                    }
                    _this.employeeDTOes = employeeList;
                },
                cancel: function () {
                    //alert("cancel");
                    let _this = this;
                    var employeeList = [];
                    for (var i = 0; _this.employeeDTOes.length; i++){
                        var item = _this.employeeDTOes[i];
                        if(item.Edit == true){
                            item.Edit=false;
                            item.firstName = _this.firstNameOld;
                            item.lastName = _this.lastNameOld;
                            item.title = _this.titleOld;
                        }
                        employeeList.push(item);
                    }
                    _this.employeeDTOes = employeeList;
                },                        
                update: function (item) {
                    //alert("update");
                    let _this = this;
                    var p = {
                        EmployeeId:item.employeeId,
                        FirstName:item.firstName,
                        LastName:item.lastName,
                        Title:item.title
                    }
                    axios.put(`${webApiBaseAddr}/api/Employees/${item.employeeId}`,p).then(response=>{
                         alert(response.data);
                        _this.filterEmployees();
                        _this.cancel();
                    });
                },                      
                deleteEmployee: function (employeeId) {
                    //alert("delete");
                    let _this = this;
                    var ret = confirm("確定要刪除嗎?!");
                    if(ret == true){
                        axios.delete(`${webApiBaseAddr}/api/Employees/${employeeId}`).then(response=>{
                            alert(response.data);
                            _this.filterEmployees();
                        });
                    }
                },
                showModel: function () {
                    //alert("showModel");
                    $(`#insertModel`).modal("show");
                },
                insert:function(){
                    //alert("insert");
                    let _this = this;
                    var p = {
                        EmployeeId:0,
                        FirstName:_this.firstName,
                        LastName:_this.lastName,
                        Title:_this.title,
                    };
                    axios.post(`${webApiBaseAddr}/api/Employees`,p).then(response=>{
                        alert(response.data);
                        window.location="/HOME/VUESPA"
                    });

                }
                

            },
        };
        var app = Vue.createApp(vueApp).mount("#app");
    </script>
}
